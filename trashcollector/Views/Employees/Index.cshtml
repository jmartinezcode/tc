@model trashcollector.Models.EmployeeViewModel

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_EmployeeLayout.cshtml";
}
<div class="row">
    <div class="col">
        <h1>Welcome, @Html.DisplayFor(model => model.Employee.FirstName)</h1>

        <h4>Here are the pickups for the @Html.DisplayFor(model => model.Employee.ZipCode) area</h4>
    </div>
    <form asp-action="Filter">
        <div class="form-group">
            <select class="col form form-control-sm" asp-for="Day" value="Day.DayOfWeek" asp-items="new SelectList(new List<DayOfWeek> { DayOfWeek.Monday, DayOfWeek.Tuesday, DayOfWeek.Wednesday, DayOfWeek.Thursday, DayOfWeek.Friday })"></select>
            <input type="submit" value="Filter" class="btn btn-outline-primary btn-sm" style="margin-top: 20px" />
        </div>
    </form>
</div>

@*<hr />*@

@if (Model.Customers.Count == 0)
{
    <h4>There are no customers today.</h4>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    First Name
                </th>
                <th>
                    Last Name
                </th>
                <th>
                    Street Address
                </th>
                <th>
                    Last Pickup Date
                </th>

                <th>Confirm Pickup</th>
            </tr>
        </thead>

        <tbody>
            @foreach (var item in Model.Customers)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.FirstName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.LastName)
                    </td>
                    <td>
                        <a asp-action="Details" asp-route-id="@item.Id">@Html.DisplayFor(modelItem => item.Address.Street)</a>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Account.LastPickupDate)
                    </td>
                    <td>
                        @if (item.Account.LastPickupDate != DateTime.Today && item.Account.PickupDay == DateTime.Today.DayOfWeek)
                        {
                            <a class="btn btn-outline-primary btn-sm" asp-action="ConfirmPickup" asp-route-id="@item.Id">
                                Confirm Pickup
                            </a>
                        }

                    </td>
                </tr>
            }
        </tbody>
    </table>
}
<script>
    var geocoder;
    var map;
    function initialize() {
        geocoder = new google.maps.Geocoder();
        var latlng = new google.maps.LatLng(35.0844, -106.6504); //This is from https://developers.google.com/maps/documentation/javascript/geocoding#GeocodingRequests
        var mapOptions = {
            zoom: 15,
            center: latlng
        }
        map = new google.maps.Map(document.getElementById('map'), mapOptions);
        codeAddress();
    }

    function codeAddress() {
        var addresses = [];
        @foreach (var customer in Model.Customers)
        {
            @:addresses.push("@customer.Address.Street + @customer.Address.City + @customer.Address.State")
        }
        for (var i = 0; i < @Model.Customers.Count; i++) {
            var address = address[i];
            geocoder.geocode( { 'address': address}, function(results, status) {
                if (status == 'OK') {
                    map.setCenter(results[0].geometry.location);
                    var marker = new google.maps.Marker({
                        map: map,
                        position: results[0].geometry.location
                    });
                } else {
                    alert('Geocode was not successful for the following reason: ' + status);
                }
            });
        }
    }
</script>
<body onload="initialize()">
    <div id="map"></div>
</body>
<script async defer
        src="https://maps.googleapis.com/maps/api/js?key= + @API_KEYS.GoogleAPI">
</script>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
